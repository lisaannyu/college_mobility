group.point.size = 4, grid.line.width = 0.2,
legend.text.size = 16)
ggsave("/Users/lisaannyu/Documents/Berkeley/Guest Lecture for Yang/Images/Jane Austen Names.jpg", width = 12, height = 9)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
# top_n(10, n) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
# group_by(book) %>%
# arrange(desc(per_name)) %>%
# slice(2:4) %>%
# top_n(3, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
select(-max) %>%
ggradar(grid.max = max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`),
grid.mid = 0.3,
values.radar = c("0%", "30%", paste0(round(
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
font.radar = "Arial", axis.label.size = 5.8, grid.label.size = 9,
group.point.size = 4, grid.line.width = 0.2,
legend.text.size = 16)
ggsave("/Users/lisaannyu/Documents/Berkeley/Guest Lecture for Yang/Images/Jane Austen Names.jpg", width = 12, height = 9)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
select(-max)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
arrange(-max) %>%
select(-max) %>%
ggradar(grid.max = max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`),
grid.mid = 0.3,
values.radar = c("0%", "30%", paste0(round(
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
font.radar = "Arial", axis.label.size = 5.8, grid.label.size = 9,
group.point.size = 4, grid.line.width = 0.2,
legend.text.size = 16)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
arrange(-max)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
arrange(-max) %>%
mutate(word = reorder(word, -max))
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
arrange(-max) %>%
mutate(word = reorder(word, -max)) %>%
select(-max) %>%
ggradar(grid.max = max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`),
grid.mid = 0.3,
values.radar = c("0%", "30%", paste0(round(
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
font.radar = "Arial", axis.label.size = 5.8, grid.label.size = 9,
group.point.size = 4, grid.line.width = 0.2,
legend.text.size = 16)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
# arrange(-max) %>%
mutate(word = reorder(word, -max)) %>%
select(-max) %>%
ggradar(grid.max = max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`),
grid.mid = 0.3,
values.radar = c("0%", "30%", paste0(round(
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
font.radar = "Arial", axis.label.size = 5.8, grid.label.size = 9,
group.point.size = 4, grid.line.width = 0.2,
legend.text.size = 16)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
mutate(word = reorder(word, -max)) %>%
select(-max) %>%
ggradar(grid.max = max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`),
grid.mid = 0.3,
values.radar = c("0%", "30%", paste0(round(
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
font.radar = "Arial", axis.label.size = 5.8, grid.label.size = 9,
group.point.size = 4, grid.line.width = 0.2,
legend.text.size = 16)
ggsave("/Users/lisaannyu/Documents/Berkeley/Guest Lecture for Yang/Images/Jane Austen Names.jpg", width = 12, height = 9)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
mutate(word = reorder(word, -max))
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
arrange(-max) %>%
mutate(word = reorder(word, -max))
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
arrange(-max) %>%
mutate(word = reorder(word, -max)) %>%
select(-max) %>%
ggradar(grid.max = max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`),
grid.mid = 0.3,
values.radar = c("0%", "30%", paste0(round(
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
font.radar = "Arial", axis.label.size = 5.8, grid.label.size = 9,
group.point.size = 4, grid.line.width = 0.2,
legend.text.size = 16)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
arrange(-max) %>%
mutate(word = factor(word),
word = reorder(word, -max)) %>%
select(-max) %>%
ggradar(grid.max = max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`),
grid.mid = 0.3,
values.radar = c("0%", "30%", paste0(round(
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
font.radar = "Arial", axis.label.size = 5.8, grid.label.size = 9,
group.point.size = 4, grid.line.width = 0.2,
legend.text.size = 16)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
arrange(-max) %>%
mutate(word = factor(word),
word = reorder(word, -max)) %>%
select(-max)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
arrange(-max) %>%
mutate(word = factor(word),
word = reorder(word, -max)) %>%
select(-max) %>% .$word %>% levels()
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
arrange(-max) %>%
mutate(word = factor(word),
word = reorder(word, -max)) %>%
select(-max) %>% .$word %>% labels()
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
arrange(-max) %>%
mutate(word = factor(word),
word = reorder(word, -max)) %>%
select(-max) %>%
ggradar(grid.max = max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`),
grid.mid = 0.3,
values.radar = c("0%", "30%", paste0(round(
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
font.radar = "Arial", axis.label.size = 5.8, grid.label.size = 9,
group.point.size = 4, grid.line.width = 0.2,
legend.text.size = 16)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
select(-max) %>%
ggradar(grid.max = max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`),
grid.mid = 0.3,
values.radar = c("0%", "30%", paste0(round(
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
font.radar = "Arial", axis.label.size = 5.8, grid.label.size = 9,
group.point.size = 4, grid.line.width = 0.2,
legend.text.size = 16)
ggsave("/Users/lisaannyu/Documents/Berkeley/Guest Lecture for Yang/Images/Jane Austen Names.jpg", width = 12, height = 9)
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
select(-max) %>%
ggradar(grid.max = max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`),
grid.mid = 0.3,
values.radar = c("0%", "30%", paste0(round(
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
font.radar = "Arial", axis.label.size = 5.8, grid.label.size = 9,
group.point.size = 4, grid.line.width = 0.2,
legend.text.size = 16) +
labs(title = "Jane Austen Reuses Character Names")
ggsave("/Users/lisaannyu/Documents/Berkeley/Guest Lecture for Yang/Images/Jane Austen Names.jpg", width = 12, height = 9)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(ggradar)
library(tidyr)
file_path_names <- "/Users/lisaannyu/Documents/Berkeley/Guest Lecture for Yang/data/book_counts.csv"
names <- read_csv(file_path_names)
names
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
select(-max)
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
select(-max) %>%
ggradar(grid.max = max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`),
grid.mid = 0.3,
values.radar = c("0%", "30%", paste0(round(
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
font.radar = "Arial", axis.label.size = 5.8, grid.label.size = 9,
group.point.size = 4, grid.line.width = 0.2,
legend.text.size = 16) +
labs(title = "Jane Austen Reuses Character Names") +
facet_grid(~ word)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
select(-max) %>%
ggradar(grid.max = max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`),
grid.mid = 0.3,
values.radar = c("0%", "30%", paste0(round(
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
font.radar = "Arial", axis.label.size = 5.8, grid.label.size = 9,
group.point.size = 4, grid.line.width = 0.2,
legend.text.size = 16) +
labs(title = "Jane Austen Reuses Character Names") +
facet_wrap(~ word)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
select(-max) %>%
ggRadar(grid.max = max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`),
grid.mid = 0.3,
values.radar = c("0%", "30%", paste0(round(
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
font.radar = "Arial", axis.label.size = 5.8, grid.label.size = 9,
group.point.size = 4, grid.line.width = 0.2,
legend.text.size = 16) +
labs(title = "Jane Austen Reuses Character Names")
install.packages("ggRadar")
install.packages("ggiraph")
library(ggiraph)
names %>%
rename(total_num_names = total) %>%
filter(!(word %in% c("london", "england"))) %>%
mutate(per_name = n / total_num_names) %>%
select(book, word, per_name) %>%
spread(key = book, value = per_name) %>%
mutate_all(funs(ifelse(is.na(.), 0, .))) %>%
# want 10 names with most distribution between the 6 books
mutate(max = pmax(Emma, `Mansfield Park`, `Northanger Abbey`, Persuasion, `Pride & Prejudice`, `Sense & Sensibility`)) %>%
top_n(8, -max) %>%
select(-max) %>%
ggRadar(grid.max = max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`),
grid.mid = 0.3,
values.radar = c("0%", "30%", paste0(round(
max(.$Emma, .$`Mansfield Park`, .$`Northanger Abbey`, .$Persuasion, .$`Pride & Prejudice`, .$`Sense & Sensibility`) *
100, 0), "%")),
font.radar = "Arial", axis.label.size = 5.8, grid.label.size = 9,
group.point.size = 4, grid.line.width = 0.2,
legend.text.size = 16) +
labs(title = "Jane Austen Reuses Character Names")
help(package = 'ggiraph')
shiny::runApp('GitHub/dcl-2017-01/lisa-ann/c01-own/college-mobility-4')
runApp('GitHub/college_mobility')
runApp('GitHub/college_mobility')
runApp("/Users/lisaannyu/GitHub/college_mobility")
runApp("/Users/lisaannyu/GitHub/college_mobility")
runApp('GitHub/college_mobility')
table_2
runApp('GitHub/college_mobility')
runApp('GitHub/college_mobility')
?stringr::to_upper
help(package = "stringr")
runApp('GitHub/college_mobility')
help(package = "scales")
runApp('GitHub/college_mobility')
library(tidyverse)
library(shiny)
library(shinydashboard)
# Parameters
# Table 1: Baaseline Cross-Sectional Estimates by College
table_2_file_path <-
"http://www.equality-of-opportunity.org/data/college/mrc_table2.dta"
table_2 <- haven::read_dta(table_2_file_path) %>%
arrange(name)
# Table 10: College-level Characteristics
table_10_file_path <-
"http://www.equality-of-opportunity.org/data/college/mrc_table10.dta"
table_10 <- haven::read_dta(table_10_file_path) %>%
arrange(name)
# Combine Tables 2 and 10 together
table_2 %>%
left_join(table_10, by = "name")
# Table 10: College-level Characteristics
table_10_file_path <-
"http://www.equality-of-opportunity.org/data/college/mrc_table10.dta"
table_10 <- haven::read_dta(table_10_file_path) %>%
arrange(name)
?haven::read_dta
table_10 <- haven::read_dta(table_10_file_path, encoding = "windows-1252") %>%
arrange(name)
# Table 10: College-level Characteristics
table_10_file_path <-
"mrc_table10.csv"
table_10 <- read_csv(table_10_file_path) %>%
arrange(name)
runApp('GitHub/college_mobility')
table_10 <- read_csv('/Users/lisaannyu/GitHub/college_mobility/mrc_table10.csv')) %>%
arrange(name)
table_10 <- read_csv('/Users/lisaannyu/GitHub/college_mobility/mrc_table10.csv') %>%
arrange(name)
table_10
runApp('GitHub/college_mobility')
table_10$name %>% length()
# Parameters
# Table 1: Baaseline Cross-Sectional Estimates by College
table_2_file_path <-
"http://www.equality-of-opportunity.org/data/college/mrc_table2.dta"
table_2 <- haven::read_dta(table_2_file_path) %>%
arrange(name)
table_2$name %>% length()
table_2 %>% left_join(table_10, by = "name")
runApp('GitHub/college_mobility')
table_10
table_10$sat_avg_2013
table_10$sat_avg_2013[table_10$name == "Stanford University"]
runApp('GitHub/college_mobility')
